case $- in
    *i*) ;;
      *) return;;
esac

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     export is_linux=true;;
    Darwin*)    export is_mac=true;;
    CYGWIN*)    export is_cygwin=true;;
    *)          export is_unknown="UNKNOWN:${unameOut}"
esac


HISTCONTROL=ignoreboth

shopt -s histappend

HISTSIZE=1000
HISTFILESIZE=2000

shopt -s checkwinsize

[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

#enhance security in linux
if $is_linux;then
  if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
      debian_chroot=$(cat /etc/debian_chroot)
  fi
fi

#setting color prompt for terminal
case "$TERM" in
    xterm-color) color_prompt=yes;;
    #mac is xterm-256color
    xterm-256color) color_prompt=yes;;
esac

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    if $is_linux;then
      PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    fi
    if $is_mac;then
      PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    fi
else
    if $is_linux;then
      PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
    fi
    if $is_mac;then
      PS1='\u@\h:\w\$ '
    fi
fi
unset color_prompt force_color_prompt

if $is_linux;then
  case "$TERM" in
  xterm*|rxvt*)
      PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
      ;;
  *)
      ;;
  esac
fi

# Alias definitions.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# custom script
if [ -f ~/.bash_home_brew_script ]; then
    . ~/.bash_home_brew_script
fi

# custom dir_path 
if [ -f ~/.bash_dir_path ]; then
    . ~/.bash_dir_path
fi

# load git autocompletion
if [ -f  ~/.git-completion.bash ]; then
    . ~/.git-completion.bash
fi

# enable programmable completion features 
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


# directory color display
LS_COLORS=$LS_COLORS:'di=36:' ; export LS_COLORS
UTILITY_PATH=~/projects/utility
PATH=$PATH:~/Documents/code
spark_location=/usr/local/spark/bin
ls $spark_location >/dev/null 2>&1 && PATH=$PATH:$spark_location
PATH=$PATH:/usr/local/go/bin
#add support for golang, install please check go.cheatsheet
PATH=$PATH:/usr/local/go/bin
PATH=$PATH:$UTILITY_PATH/bash_lib
PATH=$PATH:/opt/share/jvm/current_java_jdk/bin
export PATH
export PYTHONPATH=~/projects/excalibur:$PYTHONPATH
export JAVA_HOME=/opt/share/jvm/current_java_jdk
export ceacar_setting=~/projects/ceacar_settings
export notes=$ceacar_setting/notes

if [ -f $ceacar_setting/configs/local_configs/bash_local_config ];then
    . $ceacar_setting/configs/local_configs/bash_local_config
fi

#alias sshmycellphone='ssh xiazi@192.168.86.244 -p 8022'

if $is_amc;then
  #source docker-machine env, needed for docker cmd access
  eval "$(docker-machine env default)"
  #this will try to start brew docker daemon service if it is not available
  docker_machine_count=$(docker-machine ls | wc -l)
  if [ $docker_machine_count -lt 2 ];then
    brew services start docker-machine
  fi
fi

# added by Anaconda3 2018.12 installer
# >>> conda init >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$(CONDA_REPORT_ERRORS=false '~/anaconda3/bin/conda' shell.bash hook 2> /dev/null)"
if [ $? -eq 0 ]; then
    \eval "$__conda_setup"
else
    if [ -f "~/anaconda3/etc/profile.d/conda.sh" ]; then
        . "~/anaconda3/etc/profile.d/conda.sh"
        CONDA_CHANGEPS1=false conda activate base
    else
        \export PATH="~/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda init <<<

# added by Anaconda3 installer
export PATH=$PATH:~/anaconda3/bin
. ~/anaconda3/etc/profile.d/conda.sh
