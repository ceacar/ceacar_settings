# set prefix to `
set-option -g prefix `
# set-option -g prefix C-a   # to be more like screen
 
# not needed
unbind-key C-b
 
# we might need ` at some point, allow switching to C-a (via <prefix> F11)
bind-key F12 set-option -g prefix `
bind-key F11 set-option -g prefix C-a
bind-key ` last-window # easy cycling through window last window ``  (double backticks)
 
# 0 is too far from ` ;)
set -g base-index 1
 
# Set action on window bell. any means a bell in any window linked to a
# session causes a bell in the current window of that session, none means
# all bells are ignored and current means only bell in windows other than
# the current window are ignored.
set-option -g bell-action none 

# If on, ring the terminal bell when an activity, content or silence alert
# occurs.
# set-option -g bell-on-alert off 

# set-option -g default-terminal "screen-256color"
set-option -g status-keys vi
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
set-option -g visual-bell on
setw -g monitor-activity on
 
# prefix vi keys(hjkl) work
setw -g mode-keys vi
 
# mouse usage
# not enable mouse scroll by default since it conflicts with copy text with mouse
# set -g mode-mouse on
# Toggle mouse on with <prefix> m   # in order to interact with panes/windows
bind m set -g mouse on \; display 'Mouse-mode: ON; Scroll is Enabled'
#bind m set -g mode-mouse on \; set -g mouse-resize-pane on \; set -g mouse-select-pane on \; set -g mouse-select-window on \; display 'Mouse: ON'
 
# Toggle mouse off with <prefix> M  # in order to use copy/paste
bind M set -g mouse off \; display 'Mouse-mode: OFF; Scroll is Disabled'
#bind M set -g mode-mouse off \; set -g mouse-resize-pane off \; set -g mouse-select-pane off \; set -g mouse-select-window off \; display 'Mouse: OFF'
 
bind e previous-window
bind f next-window
# use the vim motion keys to move between panes

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
 
# resize current pane by one
bind < resize-pane -L 1 # left
bind > resize-pane -R 1 # right
bind ^ resize-pane -U 1 # up
bind v resize-pane -D 1 # down
 
# toggle panes to have same input/output
bind s set -g synchronize-panes
 
unbind %
#bind | split-window -h
#bind - split-window -v
#since tmux 1.9 the split with current directory feature is disabled, and replaced with the -c flag for setting the default directory to split on
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
 
#set-option -g status-utf8 on
set-option -g status-justify left
set-option -g status-bg black
set-option -g status-fg white
set-option -g status-left-length 40
 
# pane coloring
#set-option -g pane-active-border-fg green
#set-option -g pane-active-border-bg black
#tmux 2.9 need use different syntax for pane-active
setw -g window-status-current-style fg=green,bg=black
#set-option -g pane-border-fg white
#set-option -g pane-border-bg black
 
#set-option -g message-fg black
#set-option -g message-bg green
 
# window coloring
#setw -g window-status-bg black
#setw -g window-status-current-fg green
 
# left side of status bar
set -g status-left '#[fg=red]#H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]'
 
# right side of status bar
# set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'
set -g status-right '#[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'
 
set -g history-limit 10240 #setting longer history
 
# `r will reload config file
bind r source-file ~/.tmux.conf

# fix ssh agent when tmux is detached
#setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock


## Join windows: <prefix> s, <prefix> j
#bind-key z command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key a command-prompt -p "send pane to:"  "join-pane -t '%%'"
#break-pane is for breaking a pane to a new window

#make tmux copy mode shortcuts the same as vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

## Clipboard integration
# ctrl+c to send to clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# ctrl+v to paste from clipboard
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
# bind ctrl-k to clear history
bind -n C-k clear-history
