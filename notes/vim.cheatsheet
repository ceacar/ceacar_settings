#upgrade vim on mac

git clone https://github.com/vim/vim.git
cd vim/src
make
alias vim='path_to_your_own_vim'



#vimdiff
#disable color
:diffoff!
#enable color
:windo diffthis




#compile vim source code
git clone https://github.com/vim/vim.git
sudo ./configure --with-features=huge --enable-multibyte --enable-rubyinterp=yes --enable-pythoninterp=yes --with-python-config-dir=/usr/lib/python2.7/config --enable-python3interp=yes --with-python3-config-dir=/usr/lib/python3.5/config --enable-perlinterp=yes --enable-luainterp=yes --enable-gui=gtk2 --enable-cscope --prefix=/usr
sudo make install


#add comma to the end of a block of text
ctrl+v to select block or type Vip for fast selection of a block
now type :norm A,



#install vim8 with lua and python support
sudo apt-get remove --purge vim vim-runtime vim-gnome vim-tiny vim-gui-common
 
sudo apt-get install liblua5.1-dev luajit libluajit-5.1 python-dev ruby-dev libperl-dev libncurses5-dev libatk1.0-dev libx11-dev libxpm-dev libxt-dev

sudo rm -rf /usr/local/share/vim

sudo rm /usr/bin/vim
 
sudo mkdir /usr/include/lua5.1/include
sudo cp /usr/include/lua5.1/*.h /usr/include/lua5.1/include/

cd /opt/
git clone https://github.com/vim/vim
cd /opt/vim
git pull && git fetch
cd vim/src
make distclean # if vim was prev installed
./configure --with-features=huge \
            --enable-rubyinterp \
            --enable-largefile \
            --disable-netbeans \
            --enable-pythoninterp \
            --with-python-config-dir=/usr/lib/python3.5/config \
            --enable-perlinterp \
            --enable-luainterp \
            --with-luajit \
            --enable-fail-if-missing \
            --with-lua-prefix=/usr/include/lua5.1 \
            --enable-cscope
      
make 
sudo make install

# alias vi="vim" in .zshrc / .bashrc

#search within a block of lines
/\%>384l\%<400ltable #%> and %< is marks of start and end of search block, \is to escape it, 384l means 384line.
#so above cmd means start from line 384 ends with 400line search for word table



#syntastic
#153
#
#:SyntasticToggleMode
#you can toggle Syntastic into passive mode, which will disable auto-checking
#You can then check a file by running :SyntasticCheck instead.
help syntastic-commands


ctags -R . # this generates tags for vim to search

#goto nth character
The pipe '|' character may be what you want:
To go to 25th column in a line in normal mode press 25|
To go to 37th column in a line in normal mode press 37|

#to lowercase
select text in v mode
and then press u for lower case, U for upper case


#close all tab except current one
:tabonly


# swap lower case and upper case
select in visual mode and then press U for upper case and u for lower case

# pipe stdin to vim
cat file1|vim -

# change git df to vimdiff
u0_a213@localhost:~/projects/termux_related/configs/local$ git config diff.tool vimdiff
u0_a213@localhost:~/projects/termux_related/configs/local$ git config diff.tool vimdiff
u0_a213@localhost:~/projects/termux_related/configs/local$ git config --global diff.tool vimdiff

# list all vim color groups
highlight


# vimscript for opening large amount of file to edit as tabs
files1=( file1.txt file2.txt file3.txt )
files2=( file1_.txt file2_.txt file3_.txt )

cmd="vim -c 'set diffopt=filler,vertical' -c 'edit ${files1[0]}' -c 'diffsplit ${files2[0]}' "
echo $cmd
for i in {1..2}; do
  cmd="${cmd} -c 'tabe ${files1[i]}' -c 'diffsplit ${files2[i]}' "
done

eval $cmd

# vimdiff wrapper to have git diff uses vimdiff
/data/data/com.termux/files/usr/bin/vimdiff "$2" "$5"

# vimdiff sets foldmethod diff so all unchanged lines are folded. From inside vimdiff you can open all folds by pressing zR.


# git diff will send below argument to external diff tool
path  old-file  old-hex old-mode  new-file  new-hex new-mode


# set vim to zoom in and out
#noremap Zz <c-w>_ \| <c-w>\|
#noremap Zo <c-w>=
ctrl-w + | Set current window width to N (default: widest possible).
ctrl-w + _ Set current window height to N (default: highest possible).
ctrl-w + = Make all windows (almost) equally high and wide.

# move vim window
Ctrl W gives you the "windows command mode", allowing the following modifiers:

Ctrl W + R - To rotate windows up/left.

Ctrl W + r - To rotate windows down/right.

You can also use the "windows command mode" with navigation keys to change a window's position:

Ctrl W + L - Move the current window to the "far right"

Ctrl W + H - Move the current window to the "far left"

Ctrl W + J - Move the current window to the "very bottom"

Ctrl W + K - Move the current window to the "very top"

# resize vim pane
:resize 150  # put current pane size 150(max possible size is 180) height of monitor
:vertical resize 150  # put current pane 150 percent width of monitor


# unwrap lines
set wrap!

# send current pane to new tab
# Ctrl-W Shift-T

# delete spaces in the end of line
:%s/\s\+$//e
# remove empty line
:v/\S/d
# not sure why below line doesn't work well
:g/^$/d


# recording
q+anykey of 0-9a-zA-z # to start recording, let's say we press q+1
q # press q again to stop recording
@+ anykey_that_you_just_typed_above_in_recording # @+1 will replay the any operation you have done during recording
# this only record per vim instance


# join two lines without space
gJ

:set foldmethod=syntax # the folds will be specified from the syntax definitions.
:set foldmethod=indent # to have the indentation define the folds.

# You can close all folds with
zM
#If you have nested folds and you want to fold level by level
zm 
# To open all folds use
zR
# To open one level fold
zr
